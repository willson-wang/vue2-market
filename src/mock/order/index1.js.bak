import { paramURL } from '@/utils';
import Mock from 'mockjs';

const Random = Mock.Random;

export default {
    getOrderOneOrderList: (config) => {
        const param = paramURL(config.url);
        let result = {};
        result.key = ['订单号', '销售平台', 'SKU', '产品品牌', '所属仓库', '订单类型', '平台订单号', '物流方式/跟踪号', '出货状态', '完成状态', '金额', '北京付款时间'];
        const value = [];
        const count = 100;
        const start = (Number(param.offset) - 1) * Number(param.limit);
        const end = Number(param.offset) * Number(param.limit);
        // 第一种造数据的方式，引入Random来进行造数据
        // for (let i = 0; i < count; i++) {
        //     value.push({
        //         orderId: Random.increment(),
        //         orderNo: 'CO' + Random.now('day', 'yyyyMMdd') + 'LZD',
        //         salesPlat: Random.first(),
        //         sku: Random.float(0, 100000000000, 2),
        //         skuId: Random.increment(),
        //         productBrand: Random.cword('零一二三四五六七八九十', 3),
        //         warehouse: Random.cword('光明清溪', 2),
        //         warehouseId: '172',
        //         orderType: '普通',
        //         platOrderNo: Random.integer(0),
        //         logistics: Random.cword('零一二三四五六七八九十', 5),
        //         sailStatus: '未出货',
        //         complateStatus: '备货中',
        //         price: Random.float(0, 100, 4) + 'USD',
        //         payTime: Random.now('second')
        //     })
        // }

        // 第二种方式直接使用Mock.mock并加@来进行造数据
        for (let i = 0; i < count; i++) {
            value.push(Mock.mock({
                orderId: '@increment',
                orderNo: 'CO' + '@now("day", "yyyyMMdd")' + 'LZD',
                salesPlat: '@first',
                sku: '@float(0, 100000, 2, 4)',
                skuId: '@increment()',
                productBrand: "@cword('零一二三四五六七八九十', 3)",
                warehouse: '@cword("光明清溪", 2)',
                warehouseId: '172',
                orderType: '普通',
                platOrderNo: '@integer(0)',
                logistics: '@cword("零一二三四五六七八九十", 5)',
                sailStatus: '未出货',
                complateStatus: '备货中',
                price: '@float(0, 100, 2, 4)' + 'USD',
                payTime: '@now("second")'
            }))
        }
        result.value = value.slice(start, end);
        result.pagingData = {
            limit: +param.limit,
            offset: +param.offset,
            total: count
        };
        return result;
    },
    // 取消订单
    orderCancel: (config) => {
        return {
            status: Random.boolean(1, 2, false)
        };
    },
    // 锁定订单
    orderLock: () => {
        return {
            status: Random.boolean()
        }
    },
    // 解锁订单
    orderUnLock: () => {
        return {
            status: Random.boolean()
        }
    }
}